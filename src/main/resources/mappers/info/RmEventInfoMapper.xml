<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.religion.zhiyun.event.dao.RmEventInfoMapper">
    <sql id="eventColumn">
        EVENT_ID as eventId,
        ACCESS_NUMBER as accessNumber,
        DEVICE_NAME as deviceName,
        DEVICE_TYPE as deviceType,
        WARN_TIME as warnTime,
        REL_VENUES_ID as relVenuesId,
        RESPONSIBLE_PERSON as responsiblePerson,
        EVENT_TYPE as eventType,
        RAWDATA as rawData,
        EVENT_DATA as eventData,
        EVENT_LEVEL as eventLevel,
        LOCATION as location,
        EVENT_STATE as eventState,
        HANDLE_RESULTS as handleTesults,
        HANDLE_TIME as handleTime
    </sql>
    <sql id="infoColumn">
        rm_event_info.ACCESS_NUMBER as accessNumber,
        WARN_TIME as warnTime,
        EVENT_TYPE as eventType,
        EVENT_STATE as eventState,
        VENUES_PHONE as venuesPhone,
        VENUES_NAME as VENUES_NAME,
        RELIGIOUS_SECT as religiousSect,
        ORGANIZATION as organization,
        VENUES_ADDRES as venuesAddres,
        rm_staff_info.STAFF_TELPHONE as staffTelphone
    </sql>

    <insert id="addEvent" useGeneratedKeys="true" keyProperty="eventId">
        insert into rm_event_info (
            ACCESS_NUMBER,
            WARN_TIME,
            REL_VENUES_ID,
            RESPONSIBLE_PERSON,
            EVENT_TYPE,
            EVENT_STATE,
            HANDLE_RESULTS,
            HANDLE_TIME
        ) values (
            #{accessNumber},
            #{warnTime},
            #{relVenuesId},
            #{responsiblePerson},
            #{eventType},
            #{eventState},
            #{handleTesults},
            #{handleTime}
        )
    </insert>
    <insert id="addEventByNB">
        insert into rm_event_info(
            DEVICE_NAME,
            ACCESS_NUMBER,
            DEVICE_TYPE,
            WARN_TIME,
            EVENT_TYPE,
            RAWDATA,
            EVENT_DATA,
            EVENT_LEVEL,
            LOCATION,
            EVENT_STATE,
            HANDLE_RESULTS,
            HANDLE_TIME,
            REL_VENUES_ID
        ) values (
            #{deviceName},
            #{accessNumber},
            #{deviceType},
            #{warnTime},
            #{eventType},
            #{rawData},
            #{eventData},
            #{eventLevel},
            #{location},
            #{eventState},
            #{handleTesults},
            #{handleTime},
            #{relVenuesId}
        )

    </insert>
    <update id="updateEvent">
        update rm_event_info
        set RESPONSIBLE_PERSON=#{responsiblePerson},
            EVENT_TYPE=#{eventType},
            EVENT_STATE=#{eventState},
            HANDLE_RESULTS=#{handleTesults}
        where EVENT_ID=#{eventId}
    </update>

    <delete id="deleteEvent">
        delete from rm_event_info
        where EVENT_ID=#{eventId}
    </delete>
    <select id="allEvent" resultType="com.religion.zhiyun.event.entity.EventEntity">
        select <include refid="eventColumn"/>
        from rm_event_info
    </select>

    <select id="allEventByState" resultType="com.religion.zhiyun.event.entity.EventEntity">
        select <include refid="eventColumn"/> from rm_event_info
        where EVENT_STATE=00
        order by WARN_TIME desc
    </select>
    <select id="getByEventId" resultType="com.religion.zhiyun.event.entity.EventEntity">
        SELECT <include refid="infoColumn"/>
        FROM rm_event_info
        INNER JOIN rm_monitor_manage_info ON rm_event_info.ACCESS_NUMBER=rm_monitor_manage_info.ACCESS_NUMBER
        INNER JOIN rm_venues_info ON rm_event_info.REL_VENUES_ID=rm_venues_info.VENUES_ID
        WHERE rm_event_info.EVENT_ID=#{eventId}
    </select>

    <select id="getByType" resultType="map">
        select
            EVENT_ID as eventId,
            m.ACCESS_NUMBER as accessNumber,
            DATE_FORMAT(WARN_TIME,'%Y-%m-%d %H:%i:%s') as warnTime,
            v.VENUES_ADDRES as venuesAddres,
            v.VENUES_NAME as venuesName,
            e.RESPONSIBLE_PERSON as responsiblePerson,
            EVENT_TYPE as eventType,
            case EVENT_TYPE
            when '01' then '火灾预警'
            when '02' then '人脸识别'
            when '03' then '任务预警'
            when '04' then '人流聚集'
            else '其他'
            end as eventTypeNm,
            EVENT_STATE as eventState,
            case EVENT_STATE
            when '00' then '待查实'
            when '01' then '已完成'
            when '02' then '误报'
            else '其他'
            end as eventStateNm,
            HANDLE_RESULTS as handleTesults,
            DATE_FORMAT(HANDLE_TIME,'%Y-%m-%d %H:%i:%s') as handleTime,
            v.PICTURES_PATH as picturesPath,
            v.VENUES_NAME as venuesName,
            e.event_level as eventLevel,
            case event_level
            when '0' then '事件'
            when '1' then '次要'
            when '2' then '重要'
            when '3' then '严重'
            else '其他'
            end as eventLevelNm,
            m.MONITOR_URL as monitorUrl

        from RM_EVENT_INFO e
        left join RM_VENUES_INFO v on e.REL_VENUES_ID=v.VENUES_ID
        left join rm_monitor_manage_info m on e.ACCESS_NUMBER=m.ACCESS_NUMBER
        <where>
            <if test="eventType!=null and eventType!=''">
                e.EVENT_TYPE=#{eventType}
            </if>
        </where>
        ORDER BY WARN_TIME DESC
        limit #{page},#{size}

    </select>

    <select id="getEventsByPage" resultType="com.religion.zhiyun.event.entity.EventEntity">
        select
            EVENT_ID as eventId,
            ACCESS_NUMBER as accessNumber,
            DEVICE_NAME as deviceName,
            WARN_TIME as warnTime,
            v.VENUES_ADDRES as venuesAddres,
            e.RESPONSIBLE_PERSON as responsiblePerson,
            case EVENT_TYPE
                when '01' then '火灾预警'
                when '02' then '人脸识别'
                when '03' then '任务预警'
                when '04' then '人流聚集'
                else '其他'
            end as eventType,
            EVENT_DATA as eventData,
            LOCATION as location,
            case EVENT_STATE
                when '00' then '待查实'
                when '01' then '已完成'
                when '02' then '误报'
                else '其他'
            end as eventState,
            HANDLE_RESULTS as handleTesults,
            HANDLE_TIME as handleTime
        from RM_EVENT_INFO e
        left join RM_VENUES_INFO v on e.REL_VENUES_ID=v.VENUES_ID
        where 1=1
        <if test="accessNumber != null and accessNumber != ''">
            AND  ACCESS_NUMBER LIKE CONCAT('%',#{accessNumber},'%')
        </if>
        order by HANDLE_TIME desc
        limit #{page},#{size}
    </select>

    <select id="getTotal" resultType="java.lang.Long">
        select count(EVENT_ID) from RM_EVENT_INFO
    </select>

    <select id="getAllNum" resultType="java.util.Map">
        /*SELECT EVENT_TYPE '类型', COUNT(1) '数量' FROM rm_event_info GROUP BY EVENT_TYPE*/
        SELECT
            COUNT(EVENT_ID) AS total,
            SUM(CASE WHEN EVENT_TYPE = 01 THEN 1 ELSE 0 END) AS fire,
            SUM(CASE WHEN EVENT_TYPE = 02 THEN 1 ELSE 0 END) AS face,
            SUM(CASE WHEN EVENT_TYPE = 03 THEN 1 ELSE 0 END) AS task,
            SUM(CASE WHEN EVENT_TYPE = 04 THEN 1 ELSE 0 END) AS crowd
        FROM rm_event_info
        where EVENT_STATE='00'
    </select>

    <select id="getUndoEvents" resultType="map">
        select
            ev.WARN_TIME as warnTime,
            case ev.EVENT_TYPE
                when '01' then '火灾预警'
                when '02' then '人脸识别'
                when '03' then '任务预警'
                when '04' then '人流聚集'
            end as eventType,
            ve.VENUES_NAME as venuesName,
            ve.PICTURES_PATH as  path
        from RM_EVENT_INFO ev
        left join RM_VENUES_INFO ve on ev.REL_VENUES_ID=ve.VENUES_ID
        where 1=1
        <if test="eventState != null and eventState != ''">
            AND  ev.EVENT_STATE=#{eventState}
        </if>
        <if test="eventType != null and eventType != ''">
            AND  ev.EVENT_TYPE =#{eventType}
        </if>
        ORDER BY ev.EVENT_TYPE
        limit #{page},#{size}

    </select>

    <select id="getUndoEventsTotal" resultType="java.lang.Long">
        select
            count(ev.EVENT_ID)
        from RM_EVENT_INFO ev
        where 1=1
        <if test="eventState != null and eventState != ''">
            AND  ev.EVENT_STATE=#{eventState}
        </if>
        <if test="eventType != null and eventType != ''">
            AND  ev.EVENT_TYPE =#{eventType}
        </if>
    </select>

    <select id="getEventsByState" resultType="map">
        select
                EVENT_ID as eventId,
                m.ACCESS_NUMBER as accessNumber,
                DATE_FORMAT(WARN_TIME,'%Y-%m-%d %H:%i:%s') as warnTime,
                v.VENUES_ADDRES as venuesAddres,
                e.RESPONSIBLE_PERSON as responsiblePerson,
                EVENT_TYPE as eventType,
                case EVENT_TYPE
                when '01' then '火灾预警'
                when '02' then '人脸识别'
                when '03' then '任务预警'
                when '04' then '人流聚集'
                else '其他'
                end as eventTypeNm,
                EVENT_STATE as eventState,
                case EVENT_STATE
                when '00' then '待查实'
                when '01' then '已完成'
                when '02' then '误报'
                else '其他'
                end as eventStateNm,
                HANDLE_RESULTS as handleTesults,
                DATE_FORMAT(HANDLE_TIME,'%Y-%m-%d %H:%i:%s') as handleTime,
                v.PICTURES_PATH as picturesPath,
                v.VENUES_NAME as venuesName,
                e.event_level as eventLevel,
                case event_level
                when '0' then '事件'
                when '1' then '次要'
                when '2' then '重要'
                when '3' then '严重'
                else '其他'
                end as eventLevelNm,
                m.MONITOR_URL as monitorUrl

        from RM_EVENT_INFO e
        left join RM_VENUES_INFO v on e.REL_VENUES_ID=v.VENUES_ID
        left join rm_monitor_manage_info m on e.ACCESS_NUMBER=m.ACCESS_NUMBER
        left join RM_EVENT_NOTIFIED_INFO noti on noti.ref_event_id=e.EVENT_ID
        where e.EVENT_STATE in
        <foreach collection="eventStates" item="eventState" index="index" open="(" close=")" separator=",">
            #{eventState}
        </foreach>
        <if test="login != null and login != ''">
            AND  (
                noti.NOTIFIED_USER =#{login} or NOTIFIED_STAFF =#{login}
            )
        </if>
        ORDER BY WARN_TIME DESC
        limit #{page},#{size}

    </select>

    <select id="getTotalByState" resultType="java.lang.Long">
        select count(EVENT_ID)
        from RM_EVENT_INFO
        where EVENT_STATE in
        <foreach collection="eventStates" item="eventState" index="index" open="(" close=")" separator=",">
            #{eventState}
        </foreach>
    </select>

    <update id="updateEventState">
        update rm_event_info set EVENT_STATE=#{eventState},HANDLE_TIME=#{ymdHms} where EVENT_ID=#{eventId}
    </update>

    <select id="getEventById" resultType="com.religion.zhiyun.event.entity.EventEntity">
        select <include refid="eventColumn"/>
        from rm_event_info
        <if test="eventId != null and eventId != ''">
            where  EVENT_ID =#{eventId}
        </if>
    </select>

    <select id="getEventsByMonth" resultType="map">
        select
            count(EVENT_ID) count,
            DATE_FORMAT(WARN_TIME,'%Y%m') months
        from rm_event_info
        where DATE_FORMAT(WARN_TIME,'%Y%m') &gt; #{month}
        group by months
        order by months
    </select>

    <select id="getEventsByDay" resultType="map">
        select
            count(EVENT_ID) count,
            DATE_FORMAT(WARN_TIME,'%Y%m%d') days
        from rm_event_info
        where DATE_FORMAT(WARN_TIME,'%Y%m%d') &gt; #{day}
        group by days
        order by days;
    </select>


    <select id="getEventsMonth" resultType="map">
        SELECT tm.tmDate as date,IFNULL(ev.sum,0) as count
        FROM (
            SELECT left(date_add(DATE_SUB(CURDATE(),INTERVAL dayofyear(now())-1 DAY), interval i month),7) AS tmDate
            FROM num a where a.i &gt; #{num} and type='month'
        ) tm
        LEFT JOIN (
            select DATE_FORMAT(WARN_TIME,'%Y-%m') evDate,count(EVENT_ID) sum
            from rm_event_info
            where EVENT_TYPE=#{eventType}
                and  DATE_FORMAT(WARN_TIME,'%Y-%m-%d') > date_add(CURDATE(), interval 31*#{num}  day)
            group by evDate
        ) ev on tm.tmDate= ev.evDate
        ORDER BY tm.tmDate
    </select>

    <select id="getEventsDay" resultType="map">
        SELECT DATE_FORMAT(tm.tmDate,'%Y-%m-%d') as date,IFNULL(ev.sum,0)  as count
        FROM(
            SELECT date_add(CURDATE(), interval i day) AS tmDate FROM num a where a.i &gt; #{num} and type='day'
        ) tm
        LEFT JOIN(
            select DATE_FORMAT(WARN_TIME,'%Y-%m-%d') evDate,count(EVENT_ID) as sum
            from rm_event_info
            where EVENT_TYPE=#{eventType}
                and DATE_FORMAT(WARN_TIME,'%Y-%m-%d') > date_add(CURDATE(), interval #{num}  day)
            group by evDate
        ) ev on tm.tmDate= ev.evDate
        ORDER BY tm.tmDate
    </select>

    <select id="getEventsWeek" resultType="map">
        SELECT (@rownum := @rownum + 1) AS date,
                IFNULL(zh.sum,0)  as count
        FROM(
            SELECT i AS tmDate FROM num a where a.i > #{num} and type='day'
        ) tm
        LEFT JOIN
        (
        SELECT ors.weeks,ors.sum
        from (
            (
                select  WEEK(WARN_TIME,3) -(WEEK(CURDATE(),3)) as weeks,
                        count( e.EVENT_ID) as sum
                from rm_event_info  e
                where DATE_FORMAT(WARN_TIME,'%Y')=DATE_FORMAT(CURDATE(),'%Y')
                    and DATE_FORMAT(WARN_TIME,'%Y-%m-%d') > date_add(CURDATE(), interval (#{num} +1)*7 day)
                and EVENT_TYPE=#{eventType}
                GROUP BY weeks
                ORDER BY weeks
            )union all(
                select
                    (WEEK(WARN_TIME,3) -(select WEEK(HANDLE_TIME,3) as h from num where type='lastYear') - (WEEK(CURDATE(),3))) as weeks,
                    count( e.EVENT_ID) as sum
                from rm_event_info  e
                where DATE_FORMAT(WARN_TIME,'%Y')=DATE_FORMAT(CURDATE(),'%Y')-1
                and DATE_FORMAT(WARN_TIME,'%Y-%m-%d') > (select date_add(subdate(curdate(),date_format(curdate(),'%w')-1),interval (#{num} +1)*7 day)from dual)
                and EVENT_TYPE=#{eventType}
                GROUP BY weeks
                ORDER BY weeks desc
            )
        ) ors
        )zh on tm.tmDate=zh.weeks
        join (SELECT
        @rownum := 0) AS rn
        order by tm.tmDate
    </select>


    <select id="getEventsMonthGather" resultType="map">
        SELECT  tm.tmDate as date,
                IFNULL(ev.fire,0) as fire,
                IFNULL(ev.face,0) as face,
                IFNULL(ev.crowd,0) as crowd
        FROM (
            SELECT left(date_add(DATE_SUB(CURDATE(),INTERVAL dayofyear(now())-1 DAY), interval i month),7) AS tmDate
            FROM num a where a.i &gt; #{num} and type='month'
        ) tm
        LEFT JOIN (
            select  DATE_FORMAT(WARN_TIME,'%Y-%m') evDate,
                    SUM(CASE WHEN EVENT_TYPE = 01 THEN 1 ELSE 0 END) AS fire,
                    SUM(CASE WHEN EVENT_TYPE = 02 THEN 1 ELSE 0 END) AS face,
                    SUM(CASE WHEN EVENT_TYPE = 03 THEN 1 ELSE 0 END) AS task,
                    SUM(CASE WHEN EVENT_TYPE = 04 THEN 1 ELSE 0 END) AS crowd
            from rm_event_info
            where DATE_FORMAT(WARN_TIME,'%Y-%m-%d') > date_add(CURDATE(), interval 31*#{num} day)
            group by evDate
        ) ev on tm.tmDate= ev.evDate
        ORDER BY tm.tmDate
    </select>

    <select id="getEventsDayGather" resultType="map">
        SELECT  DATE_FORMAT(tm.tmDate,'%Y-%m-%d') as date,
                IFNULL(ev.fire,0) as fire,
                IFNULL(ev.face,0) as face,
                IFNULL(ev.crowd,0) as crowd
        FROM(
            SELECT date_add(CURDATE(), interval i day) AS tmDate FROM num a where a.i &gt; #{num} and type='day'
        ) tm
        LEFT JOIN(
            select  DATE_FORMAT(WARN_TIME,'%Y-%m-%d') evDate,
                    SUM(CASE WHEN EVENT_TYPE = 01 THEN 1 ELSE 0 END) AS fire,
                    SUM(CASE WHEN EVENT_TYPE = 02 THEN 1 ELSE 0 END) AS face,
                    SUM(CASE WHEN EVENT_TYPE = 03 THEN 1 ELSE 0 END) AS task,
                    SUM(CASE WHEN EVENT_TYPE = 04 THEN 1 ELSE 0 END) AS crowd
            from rm_event_info
            where DATE_FORMAT(WARN_TIME,'%Y-%m-%d') > date_add(CURDATE(), interval #{num} day)
            group by evDate
        ) ev on tm.tmDate= ev.evDate
        ORDER BY tm.tmDate
    </select>

    <select id="getEventsWeekGather" resultType="map">
        SELECT (@rownum := @rownum + 1) AS date,
                IFNULL(zh.fire,0) as fire,
                IFNULL(zh.face,0) as face,
                IFNULL(zh.crowd,0) as crowd
        FROM(
            SELECT i AS tmDate FROM num a where a.i > #{num} and type='day'
        ) tm
        LEFT JOIN
        (
            SELECT  ors.weeks,
                    IFNULL(ors.fire,0) as fire,
                    IFNULL(ors.face,0) as face,
                    IFNULL(ors.crowd,0) as crowd
            from (
                (
                    select  WEEK(WARN_TIME,3) -(WEEK(CURDATE(),3)) as weeks,
                            SUM(CASE WHEN EVENT_TYPE = 01 THEN 1 ELSE 0 END) AS fire,
                            SUM(CASE WHEN EVENT_TYPE = 02 THEN 1 ELSE 0 END) AS face,
                            SUM(CASE WHEN EVENT_TYPE = 03 THEN 1 ELSE 0 END) AS task,
                            SUM(CASE WHEN EVENT_TYPE = 04 THEN 1 ELSE 0 END) AS crowd
                    from rm_event_info  e
                    where DATE_FORMAT(WARN_TIME,'%Y')=DATE_FORMAT(CURDATE(),'%Y')
                    and DATE_FORMAT(WARN_TIME,'%Y-%m-%d') > date_add(CURDATE(), interval (#{num}+1)*7 day)
                    GROUP BY weeks
                    ORDER BY weeks
                )union all(
                    select (WEEK(WARN_TIME,3) -(select WEEK(HANDLE_TIME,3) as h from num where type='lastYear') - (WEEK(CURDATE(),3))) as weeks,
                            SUM(CASE WHEN EVENT_TYPE = 01 THEN 1 ELSE 0 END) AS fire,
                            SUM(CASE WHEN EVENT_TYPE = 02 THEN 1 ELSE 0 END) AS face,
                            SUM(CASE WHEN EVENT_TYPE = 03 THEN 1 ELSE 0 END) AS task,
                            SUM(CASE WHEN EVENT_TYPE = 04 THEN 1 ELSE 0 END) AS crowd
                    from rm_event_info  e
                    where DATE_FORMAT(WARN_TIME,'%Y')=DATE_FORMAT(CURDATE(),'%Y')-1
                    and DATE_FORMAT(WARN_TIME,'%Y-%m-%d') > (select date_add(subdate(curdate(),date_format(curdate(),'%w')-1),interval 7*(#{num}+1)-1 day)from dual)
                    GROUP BY weeks
                    ORDER BY weeks desc
                )
            ) ors
        )zh on tm.tmDate=zh.weeks
        join (SELECT @rownum := 0) AS rn
        order by tm.tmDate
    </select>


    <select id="queryEvent" parameterType="com.religion.zhiyun.event.entity.EventEntity" resultType="map" >
        select
            e.EVENT_ID as id
        from rm_event_info e
        where e.EVENT_STATE='00'
        <if test="accessNumber!=null and accessNumber!=''">
            and e.ACCESS_NUMBER=#{accessNumber}
        </if>
        <if test="eventType!=null and eventType!=''">
            and e.EVENT_TYPE=#{eventType}
        </if>
        <if test="responsiblePerson!=null and responsiblePerson!=''">
            and e.RESPONSIBLE_PERSON=#{responsiblePerson}
        </if>
        <if test="relVenuesId!=null and relVenuesId!=''">
            and e.REL_VENUES_ID=#{relVenuesId}
        </if>
        <if test="location!=null and location!=''">
            and e.LOCATION=#{location}
        </if>

    </select>
    <select id="getMobile" resultType="com.religion.zhiyun.user.entity.SysUserEntity">
        SELECT
        us.USER_MOBILE as userMobile
        from rm_sys_user_info us
        WHERE REL_VENUES_ID=#{venuesId}
    </select>
</mapper>
